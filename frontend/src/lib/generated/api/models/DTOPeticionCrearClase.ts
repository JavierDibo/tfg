/* tslint:disable */
/* eslint-disable */
/**
 * Academia API
 * API para gesti√≥n de academia con roles de administrador, profesor y alumno
 *
 * The version of the OpenAPI document: 1.0
 * Contact: contact@academia.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Material } from './Material';
import {
    MaterialFromJSON,
    MaterialFromJSONTyped,
    MaterialToJSON,
    MaterialToJSONTyped,
} from './Material';

/**
 * Class update data
 * @export
 * @interface DTOPeticionCrearClase
 */
export interface DTOPeticionCrearClase {
    /**
     * 
     * @type {string}
     * @memberof DTOPeticionCrearClase
     */
    titulo: string;
    /**
     * 
     * @type {string}
     * @memberof DTOPeticionCrearClase
     */
    descripcion?: string;
    /**
     * 
     * @type {number}
     * @memberof DTOPeticionCrearClase
     */
    precio: number;
    /**
     * 
     * @type {string}
     * @memberof DTOPeticionCrearClase
     */
    presencialidad: DTOPeticionCrearClasePresencialidadEnum;
    /**
     * 
     * @type {string}
     * @memberof DTOPeticionCrearClase
     */
    imagenPortada?: string;
    /**
     * 
     * @type {string}
     * @memberof DTOPeticionCrearClase
     */
    nivel: DTOPeticionCrearClaseNivelEnum;
    /**
     * 
     * @type {Array<number>}
     * @memberof DTOPeticionCrearClase
     */
    profesoresId?: Array<number>;
    /**
     * 
     * @type {Array<Material>}
     * @memberof DTOPeticionCrearClase
     */
    material?: Array<Material>;
}


/**
 * @export
 */
export const DTOPeticionCrearClasePresencialidadEnum = {
    Online: 'ONLINE',
    Presencial: 'PRESENCIAL',
    Hibrido: 'HIBRIDO'
} as const;
export type DTOPeticionCrearClasePresencialidadEnum = typeof DTOPeticionCrearClasePresencialidadEnum[keyof typeof DTOPeticionCrearClasePresencialidadEnum];

/**
 * @export
 */
export const DTOPeticionCrearClaseNivelEnum = {
    Principiante: 'PRINCIPIANTE',
    Intermedio: 'INTERMEDIO',
    Avanzado: 'AVANZADO',
    Basico: 'BASICO'
} as const;
export type DTOPeticionCrearClaseNivelEnum = typeof DTOPeticionCrearClaseNivelEnum[keyof typeof DTOPeticionCrearClaseNivelEnum];


/**
 * Check if a given object implements the DTOPeticionCrearClase interface.
 */
export function instanceOfDTOPeticionCrearClase(value: object): value is DTOPeticionCrearClase {
    if (!('titulo' in value) || value['titulo'] === undefined) return false;
    if (!('precio' in value) || value['precio'] === undefined) return false;
    if (!('presencialidad' in value) || value['presencialidad'] === undefined) return false;
    if (!('nivel' in value) || value['nivel'] === undefined) return false;
    return true;
}

export function DTOPeticionCrearClaseFromJSON(json: any): DTOPeticionCrearClase {
    return DTOPeticionCrearClaseFromJSONTyped(json, false);
}

export function DTOPeticionCrearClaseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DTOPeticionCrearClase {
    if (json == null) {
        return json;
    }
    return {
        
        'titulo': json['titulo'],
        'descripcion': json['descripcion'] == null ? undefined : json['descripcion'],
        'precio': json['precio'],
        'presencialidad': json['presencialidad'],
        'imagenPortada': json['imagenPortada'] == null ? undefined : json['imagenPortada'],
        'nivel': json['nivel'],
        'profesoresId': json['profesoresId'] == null ? undefined : json['profesoresId'],
        'material': json['material'] == null ? undefined : ((json['material'] as Array<any>).map(MaterialFromJSON)),
    };
}

export function DTOPeticionCrearClaseToJSON(json: any): DTOPeticionCrearClase {
    return DTOPeticionCrearClaseToJSONTyped(json, false);
}

export function DTOPeticionCrearClaseToJSONTyped(value?: DTOPeticionCrearClase | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'titulo': value['titulo'],
        'descripcion': value['descripcion'],
        'precio': value['precio'],
        'presencialidad': value['presencialidad'],
        'imagenPortada': value['imagenPortada'],
        'nivel': value['nivel'],
        'profesoresId': value['profesoresId'],
        'material': value['material'] == null ? undefined : ((value['material'] as Array<any>).map(MaterialToJSON)),
    };
}

