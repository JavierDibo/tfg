/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DTOAlumno
 */
export interface DTOAlumno {
    /**
     * 
     * @type {number}
     * @memberof DTOAlumno
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof DTOAlumno
     */
    usuario: string;
    /**
     * 
     * @type {string}
     * @memberof DTOAlumno
     */
    nombre: string;
    /**
     * 
     * @type {string}
     * @memberof DTOAlumno
     */
    apellidos: string;
    /**
     * 
     * @type {string}
     * @memberof DTOAlumno
     */
    dni: string;
    /**
     * 
     * @type {string}
     * @memberof DTOAlumno
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof DTOAlumno
     */
    numeroTelefono?: string;
    /**
     * 
     * @type {Date}
     * @memberof DTOAlumno
     */
    fechaInscripcion?: Date;
    /**
     * 
     * @type {boolean}
     * @memberof DTOAlumno
     */
    matriculado?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof DTOAlumno
     */
    enabled?: boolean;
}

/**
 * Check if a given object implements the DTOAlumno interface.
 */
export function instanceOfDTOAlumno(value: object): value is DTOAlumno {
    if (!('usuario' in value) || value['usuario'] === undefined) return false;
    if (!('nombre' in value) || value['nombre'] === undefined) return false;
    if (!('apellidos' in value) || value['apellidos'] === undefined) return false;
    if (!('dni' in value) || value['dni'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    return true;
}

export function DTOAlumnoFromJSON(json: any): DTOAlumno {
    return DTOAlumnoFromJSONTyped(json, false);
}

export function DTOAlumnoFromJSONTyped(json: any, ignoreDiscriminator: boolean): DTOAlumno {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'usuario': json['usuario'],
        'nombre': json['nombre'],
        'apellidos': json['apellidos'],
        'dni': json['dni'],
        'email': json['email'],
        'numeroTelefono': json['numeroTelefono'] == null ? undefined : json['numeroTelefono'],
        'fechaInscripcion': json['fechaInscripcion'] == null ? undefined : (new Date(json['fechaInscripcion'])),
        'matriculado': json['matriculado'] == null ? undefined : json['matriculado'],
        'enabled': json['enabled'] == null ? undefined : json['enabled'],
    };
}

export function DTOAlumnoToJSON(json: any): DTOAlumno {
    return DTOAlumnoToJSONTyped(json, false);
}

export function DTOAlumnoToJSONTyped(value?: DTOAlumno | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'usuario': value['usuario'],
        'nombre': value['nombre'],
        'apellidos': value['apellidos'],
        'dni': value['dni'],
        'email': value['email'],
        'numeroTelefono': value['numeroTelefono'],
        'fechaInscripcion': value['fechaInscripcion'] == null ? undefined : ((value['fechaInscripcion']).toISOString()),
        'matriculado': value['matriculado'],
        'enabled': value['enabled'],
    };
}

