/* tslint:disable */
/* eslint-disable */
/**
 * Academia API
 * API para gesti√≥n de academia con roles de administrador, profesor y alumno
 *
 * The version of the OpenAPI document: 1.0
 * Contact: contact@academia.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DTOEjercicioConEntrega
 */
export interface DTOEjercicioConEntrega {
    /**
     * 
     * @type {number}
     * @memberof DTOEjercicioConEntrega
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof DTOEjercicioConEntrega
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof DTOEjercicioConEntrega
     */
    statement?: string;
    /**
     * 
     * @type {Date}
     * @memberof DTOEjercicioConEntrega
     */
    startDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof DTOEjercicioConEntrega
     */
    endDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof DTOEjercicioConEntrega
     */
    classId?: string;
    /**
     * 
     * @type {number}
     * @memberof DTOEjercicioConEntrega
     */
    numeroEntregas?: number;
    /**
     * 
     * @type {number}
     * @memberof DTOEjercicioConEntrega
     */
    entregasCalificadas?: number;
    /**
     * 
     * @type {boolean}
     * @memberof DTOEjercicioConEntrega
     */
    tieneEntrega?: boolean;
    /**
     * 
     * @type {number}
     * @memberof DTOEjercicioConEntrega
     */
    entregaId?: number;
    /**
     * 
     * @type {string}
     * @memberof DTOEjercicioConEntrega
     */
    estadoEntrega?: DTOEjercicioConEntregaEstadoEntregaEnum;
    /**
     * 
     * @type {number}
     * @memberof DTOEjercicioConEntrega
     */
    notaEntrega?: number;
    /**
     * 
     * @type {Date}
     * @memberof DTOEjercicioConEntrega
     */
    fechaEntrega?: Date;
    /**
     * 
     * @type {string}
     * @memberof DTOEjercicioConEntrega
     */
    notaFormateada?: string;
    /**
     * 
     * @type {string}
     * @memberof DTOEjercicioConEntrega
     */
    estadoEntregaDescriptivo?: string;
    /**
     * 
     * @type {string}
     * @memberof DTOEjercicioConEntrega
     */
    estado?: string;
    /**
     * 
     * @type {number}
     * @memberof DTOEjercicioConEntrega
     */
    horasRestantes?: number;
    /**
     * 
     * @type {string}
     * @memberof DTOEjercicioConEntrega
     */
    estadoEntregaUsuario?: string;
    /**
     * 
     * @type {string}
     * @memberof DTOEjercicioConEntrega
     */
    estadoEntregaTexto?: string;
    /**
     * 
     * @type {string}
     * @memberof DTOEjercicioConEntrega
     */
    estadoEntregaIcono?: string;
    /**
     * 
     * @type {number}
     * @memberof DTOEjercicioConEntrega
     */
    porcentajeEntregasCalificadas?: number;
}


/**
 * @export
 */
export const DTOEjercicioConEntregaEstadoEntregaEnum = {
    Pendiente: 'PENDIENTE',
    Entregado: 'ENTREGADO',
    Calificado: 'CALIFICADO'
} as const;
export type DTOEjercicioConEntregaEstadoEntregaEnum = typeof DTOEjercicioConEntregaEstadoEntregaEnum[keyof typeof DTOEjercicioConEntregaEstadoEntregaEnum];


/**
 * Check if a given object implements the DTOEjercicioConEntrega interface.
 */
export function instanceOfDTOEjercicioConEntrega(value: object): value is DTOEjercicioConEntrega {
    return true;
}

export function DTOEjercicioConEntregaFromJSON(json: any): DTOEjercicioConEntrega {
    return DTOEjercicioConEntregaFromJSONTyped(json, false);
}

export function DTOEjercicioConEntregaFromJSONTyped(json: any, ignoreDiscriminator: boolean): DTOEjercicioConEntrega {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'statement': json['statement'] == null ? undefined : json['statement'],
        'startDate': json['startDate'] == null ? undefined : (new Date(json['startDate'])),
        'endDate': json['endDate'] == null ? undefined : (new Date(json['endDate'])),
        'classId': json['classId'] == null ? undefined : json['classId'],
        'numeroEntregas': json['numeroEntregas'] == null ? undefined : json['numeroEntregas'],
        'entregasCalificadas': json['entregasCalificadas'] == null ? undefined : json['entregasCalificadas'],
        'tieneEntrega': json['tieneEntrega'] == null ? undefined : json['tieneEntrega'],
        'entregaId': json['entregaId'] == null ? undefined : json['entregaId'],
        'estadoEntrega': json['estadoEntrega'] == null ? undefined : json['estadoEntrega'],
        'notaEntrega': json['notaEntrega'] == null ? undefined : json['notaEntrega'],
        'fechaEntrega': json['fechaEntrega'] == null ? undefined : (new Date(json['fechaEntrega'])),
        'notaFormateada': json['notaFormateada'] == null ? undefined : json['notaFormateada'],
        'estadoEntregaDescriptivo': json['estadoEntregaDescriptivo'] == null ? undefined : json['estadoEntregaDescriptivo'],
        'estado': json['estado'] == null ? undefined : json['estado'],
        'horasRestantes': json['horasRestantes'] == null ? undefined : json['horasRestantes'],
        'estadoEntregaUsuario': json['estadoEntregaUsuario'] == null ? undefined : json['estadoEntregaUsuario'],
        'estadoEntregaTexto': json['estadoEntregaTexto'] == null ? undefined : json['estadoEntregaTexto'],
        'estadoEntregaIcono': json['estadoEntregaIcono'] == null ? undefined : json['estadoEntregaIcono'],
        'porcentajeEntregasCalificadas': json['porcentajeEntregasCalificadas'] == null ? undefined : json['porcentajeEntregasCalificadas'],
    };
}

export function DTOEjercicioConEntregaToJSON(json: any): DTOEjercicioConEntrega {
    return DTOEjercicioConEntregaToJSONTyped(json, false);
}

export function DTOEjercicioConEntregaToJSONTyped(value?: DTOEjercicioConEntrega | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'statement': value['statement'],
        'startDate': value['startDate'] == null ? undefined : ((value['startDate']).toISOString()),
        'endDate': value['endDate'] == null ? undefined : ((value['endDate']).toISOString()),
        'classId': value['classId'],
        'numeroEntregas': value['numeroEntregas'],
        'entregasCalificadas': value['entregasCalificadas'],
        'tieneEntrega': value['tieneEntrega'],
        'entregaId': value['entregaId'],
        'estadoEntrega': value['estadoEntrega'],
        'notaEntrega': value['notaEntrega'],
        'fechaEntrega': value['fechaEntrega'] == null ? undefined : ((value['fechaEntrega']).toISOString()),
        'notaFormateada': value['notaFormateada'],
        'estadoEntregaDescriptivo': value['estadoEntregaDescriptivo'],
        'estado': value['estado'],
        'horasRestantes': value['horasRestantes'],
        'estadoEntregaUsuario': value['estadoEntregaUsuario'],
        'estadoEntregaTexto': value['estadoEntregaTexto'],
        'estadoEntregaIcono': value['estadoEntregaIcono'],
        'porcentajeEntregasCalificadas': value['porcentajeEntregasCalificadas'],
    };
}

