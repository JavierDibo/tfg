/* tslint:disable */
/* eslint-disable */
/**
 * Academia API
 * API para gesti√≥n de academia con roles de administrador, profesor y alumno
 *
 * The version of the OpenAPI document: 1.0
 * Contact: contact@academia.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Public professor data
 * @export
 * @interface DTOProfesorPublico
 */
export interface DTOProfesorPublico {
    /**
     * Unique professor ID
     * @type {number}
     * @memberof DTOProfesorPublico
     */
    id: number;
    /**
     * Professor's first name
     * @type {string}
     * @memberof DTOProfesorPublico
     */
    firstName: string;
    /**
     * Professor's last name
     * @type {string}
     * @memberof DTOProfesorPublico
     */
    lastName: string;
    /**
     * Professor's email
     * @type {string}
     * @memberof DTOProfesorPublico
     */
    email: string;
    /**
     * Phone number
     * @type {string}
     * @memberof DTOProfesorPublico
     */
    phoneNumber?: string;
    /**
     * Indicates if the account is enabled
     * @type {boolean}
     * @memberof DTOProfesorPublico
     */
    enabled: boolean;
    /**
     * Number of assigned classes
     * @type {number}
     * @memberof DTOProfesorPublico
     */
    classCount: number;
    /**
     * Profile creation date
     * @type {Date}
     * @memberof DTOProfesorPublico
     */
    createdAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof DTOProfesorPublico
     */
    enabledStatus?: string;
    /**
     * 
     * @type {string}
     * @memberof DTOProfesorPublico
     */
    fullName?: string;
}

/**
 * Check if a given object implements the DTOProfesorPublico interface.
 */
export function instanceOfDTOProfesorPublico(value: object): value is DTOProfesorPublico {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('firstName' in value) || value['firstName'] === undefined) return false;
    if (!('lastName' in value) || value['lastName'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('enabled' in value) || value['enabled'] === undefined) return false;
    if (!('classCount' in value) || value['classCount'] === undefined) return false;
    return true;
}

export function DTOProfesorPublicoFromJSON(json: any): DTOProfesorPublico {
    return DTOProfesorPublicoFromJSONTyped(json, false);
}

export function DTOProfesorPublicoFromJSONTyped(json: any, ignoreDiscriminator: boolean): DTOProfesorPublico {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'firstName': json['firstName'],
        'lastName': json['lastName'],
        'email': json['email'],
        'phoneNumber': json['phoneNumber'] == null ? undefined : json['phoneNumber'],
        'enabled': json['enabled'],
        'classCount': json['classCount'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'enabledStatus': json['enabledStatus'] == null ? undefined : json['enabledStatus'],
        'fullName': json['fullName'] == null ? undefined : json['fullName'],
    };
}

export function DTOProfesorPublicoToJSON(json: any): DTOProfesorPublico {
    return DTOProfesorPublicoToJSONTyped(json, false);
}

export function DTOProfesorPublicoToJSONTyped(value?: DTOProfesorPublico | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'firstName': value['firstName'],
        'lastName': value['lastName'],
        'email': value['email'],
        'phoneNumber': value['phoneNumber'],
        'enabled': value['enabled'],
        'classCount': value['classCount'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'enabledStatus': value['enabledStatus'],
        'fullName': value['fullName'],
    };
}

