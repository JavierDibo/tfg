/* tslint:disable */
/* eslint-disable */
/**
 * Academia API
 * API para gesti√≥n de academia con roles de administrador, profesor y alumno
 *
 * The version of the OpenAPI document: 1.0
 * Contact: contact@academia.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DTORespuestaEnrollment
 */
export interface DTORespuestaEnrollment {
    /**
     * 
     * @type {boolean}
     * @memberof DTORespuestaEnrollment
     */
    success?: boolean;
    /**
     * 
     * @type {string}
     * @memberof DTORespuestaEnrollment
     */
    message?: string;
    /**
     * 
     * @type {number}
     * @memberof DTORespuestaEnrollment
     */
    studentId?: number;
    /**
     * 
     * @type {number}
     * @memberof DTORespuestaEnrollment
     */
    classId?: number;
    /**
     * 
     * @type {string}
     * @memberof DTORespuestaEnrollment
     */
    studentName?: string;
    /**
     * 
     * @type {string}
     * @memberof DTORespuestaEnrollment
     */
    className?: string;
    /**
     * 
     * @type {Date}
     * @memberof DTORespuestaEnrollment
     */
    operationDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof DTORespuestaEnrollment
     */
    operationType?: string;
}

/**
 * Check if a given object implements the DTORespuestaEnrollment interface.
 */
export function instanceOfDTORespuestaEnrollment(value: object): value is DTORespuestaEnrollment {
    return true;
}

export function DTORespuestaEnrollmentFromJSON(json: any): DTORespuestaEnrollment {
    return DTORespuestaEnrollmentFromJSONTyped(json, false);
}

export function DTORespuestaEnrollmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): DTORespuestaEnrollment {
    if (json == null) {
        return json;
    }
    return {
        
        'success': json['success'] == null ? undefined : json['success'],
        'message': json['message'] == null ? undefined : json['message'],
        'studentId': json['studentId'] == null ? undefined : json['studentId'],
        'classId': json['classId'] == null ? undefined : json['classId'],
        'studentName': json['studentName'] == null ? undefined : json['studentName'],
        'className': json['className'] == null ? undefined : json['className'],
        'operationDate': json['operationDate'] == null ? undefined : (new Date(json['operationDate'])),
        'operationType': json['operationType'] == null ? undefined : json['operationType'],
    };
}

export function DTORespuestaEnrollmentToJSON(json: any): DTORespuestaEnrollment {
    return DTORespuestaEnrollmentToJSONTyped(json, false);
}

export function DTORespuestaEnrollmentToJSONTyped(value?: DTORespuestaEnrollment | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'success': value['success'],
        'message': value['message'],
        'studentId': value['studentId'],
        'classId': value['classId'],
        'studentName': value['studentName'],
        'className': value['className'],
        'operationDate': value['operationDate'] == null ? undefined : ((value['operationDate']).toISOString()),
        'operationType': value['operationType'],
    };
}

