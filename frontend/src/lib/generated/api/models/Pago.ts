/* tslint:disable */
/* eslint-disable */
/**
 * Academia API
 * API para gesti√≥n de academia con roles de administrador, profesor y alumno
 *
 * The version of the OpenAPI document: 1.0
 * Contact: contact@academia.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Clase } from './Clase';
import {
    ClaseFromJSON,
    ClaseFromJSONTyped,
    ClaseToJSON,
    ClaseToJSONTyped,
} from './Clase';
import type { ItemPago } from './ItemPago';
import {
    ItemPagoFromJSON,
    ItemPagoFromJSONTyped,
    ItemPagoToJSON,
    ItemPagoToJSONTyped,
} from './ItemPago';

/**
 * 
 * @export
 * @interface Pago
 */
export interface Pago {
    /**
     * 
     * @type {number}
     * @memberof Pago
     */
    id?: number;
    /**
     * 
     * @type {Date}
     * @memberof Pago
     */
    fechaPago: Date;
    /**
     * 
     * @type {number}
     * @memberof Pago
     */
    importe: number;
    /**
     * 
     * @type {string}
     * @memberof Pago
     */
    metodoPago: PagoMetodoPagoEnum;
    /**
     * 
     * @type {string}
     * @memberof Pago
     */
    estado: PagoEstadoEnum;
    /**
     * 
     * @type {any}
     * @memberof Pago
     */
    alumno?: any | null;
    /**
     * 
     * @type {Clase}
     * @memberof Pago
     */
    clase?: Clase;
    /**
     * 
     * @type {boolean}
     * @memberof Pago
     */
    facturaCreada: boolean;
    /**
     * 
     * @type {Array<ItemPago>}
     * @memberof Pago
     */
    items?: Array<ItemPago>;
    /**
     * 
     * @type {string}
     * @memberof Pago
     */
    stripePaymentIntentId?: string;
    /**
     * 
     * @type {string}
     * @memberof Pago
     */
    stripeChargeId?: string;
    /**
     * 
     * @type {string}
     * @memberof Pago
     */
    failureReason?: string;
    /**
     * 
     * @type {Date}
     * @memberof Pago
     */
    fechaExpiracion?: Date;
    /**
     * 
     * @type {number}
     * @memberof Pago
     */
    classId?: number;
    /**
     * 
     * @type {number}
     * @memberof Pago
     */
    numeroItems?: number;
}


/**
 * @export
 */
export const PagoMetodoPagoEnum = {
    Efectivo: 'EFECTIVO',
    Debito: 'DEBITO',
    Credito: 'CREDITO',
    Transferencia: 'TRANSFERENCIA',
    Stripe: 'STRIPE'
} as const;
export type PagoMetodoPagoEnum = typeof PagoMetodoPagoEnum[keyof typeof PagoMetodoPagoEnum];

/**
 * @export
 */
export const PagoEstadoEnum = {
    Pendiente: 'PENDIENTE',
    Procesando: 'PROCESANDO',
    Exito: 'EXITO',
    Error: 'ERROR',
    Reembolsado: 'REEMBOLSADO'
} as const;
export type PagoEstadoEnum = typeof PagoEstadoEnum[keyof typeof PagoEstadoEnum];


/**
 * Check if a given object implements the Pago interface.
 */
export function instanceOfPago(value: object): value is Pago {
    if (!('fechaPago' in value) || value['fechaPago'] === undefined) return false;
    if (!('importe' in value) || value['importe'] === undefined) return false;
    if (!('metodoPago' in value) || value['metodoPago'] === undefined) return false;
    if (!('estado' in value) || value['estado'] === undefined) return false;
    if (!('facturaCreada' in value) || value['facturaCreada'] === undefined) return false;
    return true;
}

export function PagoFromJSON(json: any): Pago {
    return PagoFromJSONTyped(json, false);
}

export function PagoFromJSONTyped(json: any, ignoreDiscriminator: boolean): Pago {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'fechaPago': (new Date(json['fechaPago'])),
        'importe': json['importe'],
        'metodoPago': json['metodoPago'],
        'estado': json['estado'],
        'alumno': json['alumno'] == null ? undefined : json['alumno'],
        'clase': json['clase'] == null ? undefined : ClaseFromJSON(json['clase']),
        'facturaCreada': json['facturaCreada'],
        'items': json['items'] == null ? undefined : ((json['items'] as Array<any>).map(ItemPagoFromJSON)),
        'stripePaymentIntentId': json['stripePaymentIntentId'] == null ? undefined : json['stripePaymentIntentId'],
        'stripeChargeId': json['stripeChargeId'] == null ? undefined : json['stripeChargeId'],
        'failureReason': json['failureReason'] == null ? undefined : json['failureReason'],
        'fechaExpiracion': json['fechaExpiracion'] == null ? undefined : (new Date(json['fechaExpiracion'])),
        'classId': json['classId'] == null ? undefined : json['classId'],
        'numeroItems': json['numeroItems'] == null ? undefined : json['numeroItems'],
    };
}

export function PagoToJSON(json: any): Pago {
    return PagoToJSONTyped(json, false);
}

export function PagoToJSONTyped(value?: Pago | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'fechaPago': ((value['fechaPago']).toISOString()),
        'importe': value['importe'],
        'metodoPago': value['metodoPago'],
        'estado': value['estado'],
        'alumno': value['alumno'],
        'clase': ClaseToJSON(value['clase']),
        'facturaCreada': value['facturaCreada'],
        'items': value['items'] == null ? undefined : ((value['items'] as Array<any>).map(ItemPagoToJSON)),
        'stripePaymentIntentId': value['stripePaymentIntentId'],
        'stripeChargeId': value['stripeChargeId'],
        'failureReason': value['failureReason'],
        'fechaExpiracion': value['fechaExpiracion'] == null ? undefined : ((value['fechaExpiracion']).toISOString()),
        'classId': value['classId'],
        'numeroItems': value['numeroItems'],
    };
}

