/* tslint:disable */
/* eslint-disable */
/**
 * Academia API
 * API para gesti√≥n de academia con roles de administrador, profesor y alumno
 *
 * The version of the OpenAPI document: 1.0
 * Contact: contact@academia.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DTOEjercicio
 */
export interface DTOEjercicio {
    /**
     * 
     * @type {number}
     * @memberof DTOEjercicio
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof DTOEjercicio
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof DTOEjercicio
     */
    statement?: string;
    /**
     * 
     * @type {Date}
     * @memberof DTOEjercicio
     */
    startDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof DTOEjercicio
     */
    endDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof DTOEjercicio
     */
    classId?: string;
    /**
     * 
     * @type {number}
     * @memberof DTOEjercicio
     */
    numeroEntregas?: number;
    /**
     * 
     * @type {number}
     * @memberof DTOEjercicio
     */
    entregasCalificadas?: number;
    /**
     * 
     * @type {number}
     * @memberof DTOEjercicio
     */
    porcentajeEntregasCalificadas?: number;
    /**
     * 
     * @type {number}
     * @memberof DTOEjercicio
     */
    horasRestantes?: number;
    /**
     * 
     * @type {string}
     * @memberof DTOEjercicio
     */
    estado?: string;
}

/**
 * Check if a given object implements the DTOEjercicio interface.
 */
export function instanceOfDTOEjercicio(value: object): value is DTOEjercicio {
    return true;
}

export function DTOEjercicioFromJSON(json: any): DTOEjercicio {
    return DTOEjercicioFromJSONTyped(json, false);
}

export function DTOEjercicioFromJSONTyped(json: any, ignoreDiscriminator: boolean): DTOEjercicio {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'statement': json['statement'] == null ? undefined : json['statement'],
        'startDate': json['startDate'] == null ? undefined : (new Date(json['startDate'])),
        'endDate': json['endDate'] == null ? undefined : (new Date(json['endDate'])),
        'classId': json['classId'] == null ? undefined : json['classId'],
        'numeroEntregas': json['numeroEntregas'] == null ? undefined : json['numeroEntregas'],
        'entregasCalificadas': json['entregasCalificadas'] == null ? undefined : json['entregasCalificadas'],
        'porcentajeEntregasCalificadas': json['porcentajeEntregasCalificadas'] == null ? undefined : json['porcentajeEntregasCalificadas'],
        'horasRestantes': json['horasRestantes'] == null ? undefined : json['horasRestantes'],
        'estado': json['estado'] == null ? undefined : json['estado'],
    };
}

export function DTOEjercicioToJSON(json: any): DTOEjercicio {
    return DTOEjercicioToJSONTyped(json, false);
}

export function DTOEjercicioToJSONTyped(value?: DTOEjercicio | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'statement': value['statement'],
        'startDate': value['startDate'] == null ? undefined : ((value['startDate']).toISOString()),
        'endDate': value['endDate'] == null ? undefined : ((value['endDate']).toISOString()),
        'classId': value['classId'],
        'numeroEntregas': value['numeroEntregas'],
        'entregasCalificadas': value['entregasCalificadas'],
        'porcentajeEntregasCalificadas': value['porcentajeEntregasCalificadas'],
        'horasRestantes': value['horasRestantes'],
        'estado': value['estado'],
    };
}

