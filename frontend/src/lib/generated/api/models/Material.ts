/* tslint:disable */
/* eslint-disable */
/**
 * Academia API
 * API para gesti√≥n de academia con roles de administrador, profesor y alumno
 *
 * The version of the OpenAPI document: 1.0
 * Contact: contact@academia.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Clase } from './Clase';
import {
    ClaseFromJSON,
    ClaseFromJSONTyped,
    ClaseToJSON,
    ClaseToJSONTyped,
} from './Clase';

/**
 * 
 * @export
 * @interface Material
 */
export interface Material {
    /**
     * 
     * @type {number}
     * @memberof Material
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof Material
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Material
     */
    url: string;
    /**
     * 
     * @type {Array<Clase>}
     * @memberof Material
     */
    classes?: Array<Clase>;
}

/**
 * Check if a given object implements the Material interface.
 */
export function instanceOfMaterial(value: object): value is Material {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    return true;
}

export function MaterialFromJSON(json: any): Material {
    return MaterialFromJSONTyped(json, false);
}

export function MaterialFromJSONTyped(json: any, ignoreDiscriminator: boolean): Material {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'],
        'url': json['url'],
        'classes': json['classes'] == null ? undefined : ((json['classes'] as Array<any>).map(ClaseFromJSON)),
    };
}

export function MaterialToJSON(json: any): Material {
    return MaterialToJSONTyped(json, false);
}

export function MaterialToJSONTyped(value?: Material | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'url': value['url'],
        'classes': value['classes'] == null ? undefined : ((value['classes'] as Array<any>).map(ClaseToJSON)),
    };
}

