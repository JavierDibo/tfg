/* tslint:disable */
/* eslint-disable */
/**
 * Academia API
 * API para gesti√≥n de academia con roles de administrador, profesor y alumno
 *
 * The version of the OpenAPI document: 1.0
 * Contact: contact@academia.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Authentication response with JWT token
 * @export
 * @interface DTORespuestaLogin
 */
export interface DTORespuestaLogin {
    /**
     * JWT token for authentication
     * @type {string}
     * @memberof DTORespuestaLogin
     */
    token: string;
    /**
     * Token type
     * @type {string}
     * @memberof DTORespuestaLogin
     */
    type: string;
    /**
     * Authenticated user ID
     * @type {number}
     * @memberof DTORespuestaLogin
     */
    id: number;
    /**
     * Username
     * @type {string}
     * @memberof DTORespuestaLogin
     */
    username: string;
    /**
     * User email
     * @type {string}
     * @memberof DTORespuestaLogin
     */
    email: string;
    /**
     * User first name
     * @type {string}
     * @memberof DTORespuestaLogin
     */
    firstName: string;
    /**
     * User last name
     * @type {string}
     * @memberof DTORespuestaLogin
     */
    lastName: string;
    /**
     * User role
     * @type {string}
     * @memberof DTORespuestaLogin
     */
    role: string;
}

/**
 * Check if a given object implements the DTORespuestaLogin interface.
 */
export function instanceOfDTORespuestaLogin(value: object): value is DTORespuestaLogin {
    if (!('token' in value) || value['token'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('username' in value) || value['username'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('firstName' in value) || value['firstName'] === undefined) return false;
    if (!('lastName' in value) || value['lastName'] === undefined) return false;
    if (!('role' in value) || value['role'] === undefined) return false;
    return true;
}

export function DTORespuestaLoginFromJSON(json: any): DTORespuestaLogin {
    return DTORespuestaLoginFromJSONTyped(json, false);
}

export function DTORespuestaLoginFromJSONTyped(json: any, ignoreDiscriminator: boolean): DTORespuestaLogin {
    if (json == null) {
        return json;
    }
    return {
        
        'token': json['token'],
        'type': json['type'],
        'id': json['id'],
        'username': json['username'],
        'email': json['email'],
        'firstName': json['firstName'],
        'lastName': json['lastName'],
        'role': json['role'],
    };
}

export function DTORespuestaLoginToJSON(json: any): DTORespuestaLogin {
    return DTORespuestaLoginToJSONTyped(json, false);
}

export function DTORespuestaLoginToJSONTyped(value?: DTORespuestaLogin | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'token': value['token'],
        'type': value['type'],
        'id': value['id'],
        'username': value['username'],
        'email': value['email'],
        'firstName': value['firstName'],
        'lastName': value['lastName'],
        'role': value['role'],
    };
}

