/* tslint:disable */
/* eslint-disable */
/**
 * Academia API
 * API para gesti√≥n de academia con roles de administrador, profesor y alumno
 *
 * The version of the OpenAPI document: 1.0
 * Contact: contact@academia.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ItemPago } from './ItemPago';
import {
    ItemPagoFromJSON,
    ItemPagoFromJSONTyped,
    ItemPagoToJSON,
    ItemPagoToJSONTyped,
} from './ItemPago';

/**
 * 
 * @export
 * @interface DTOPago
 */
export interface DTOPago {
    /**
     * 
     * @type {number}
     * @memberof DTOPago
     */
    id?: number;
    /**
     * 
     * @type {Date}
     * @memberof DTOPago
     */
    fechaPago?: Date;
    /**
     * 
     * @type {number}
     * @memberof DTOPago
     */
    importe?: number;
    /**
     * 
     * @type {string}
     * @memberof DTOPago
     */
    metodoPago?: DTOPagoMetodoPagoEnum;
    /**
     * 
     * @type {string}
     * @memberof DTOPago
     */
    estado?: DTOPagoEstadoEnum;
    /**
     * 
     * @type {string}
     * @memberof DTOPago
     */
    alumnoId?: string;
    /**
     * 
     * @type {boolean}
     * @memberof DTOPago
     */
    facturaCreada?: boolean;
    /**
     * 
     * @type {Array<ItemPago>}
     * @memberof DTOPago
     */
    items?: Array<ItemPago>;
    /**
     * 
     * @type {string}
     * @memberof DTOPago
     */
    stripePaymentIntentId?: string;
    /**
     * 
     * @type {string}
     * @memberof DTOPago
     */
    stripeChargeId?: string;
    /**
     * 
     * @type {string}
     * @memberof DTOPago
     */
    failureReason?: string;
    /**
     * 
     * @type {string}
     * @memberof DTOPago
     */
    clientSecret?: string;
    /**
     * 
     * @type {number}
     * @memberof DTOPago
     */
    classId?: number;
    /**
     * 
     * @type {string}
     * @memberof DTOPago
     */
    descripcionEstado?: string;
    /**
     * 
     * @type {number}
     * @memberof DTOPago
     */
    numeroItems?: number;
    /**
     * 
     * @type {string}
     * @memberof DTOPago
     */
    descripcionMetodoPago?: string;
}


/**
 * @export
 */
export const DTOPagoMetodoPagoEnum = {
    Efectivo: 'EFECTIVO',
    Debito: 'DEBITO',
    Credito: 'CREDITO',
    Transferencia: 'TRANSFERENCIA',
    Stripe: 'STRIPE'
} as const;
export type DTOPagoMetodoPagoEnum = typeof DTOPagoMetodoPagoEnum[keyof typeof DTOPagoMetodoPagoEnum];

/**
 * @export
 */
export const DTOPagoEstadoEnum = {
    Pendiente: 'PENDIENTE',
    Procesando: 'PROCESANDO',
    Exito: 'EXITO',
    Error: 'ERROR',
    Reembolsado: 'REEMBOLSADO'
} as const;
export type DTOPagoEstadoEnum = typeof DTOPagoEstadoEnum[keyof typeof DTOPagoEstadoEnum];


/**
 * Check if a given object implements the DTOPago interface.
 */
export function instanceOfDTOPago(value: object): value is DTOPago {
    return true;
}

export function DTOPagoFromJSON(json: any): DTOPago {
    return DTOPagoFromJSONTyped(json, false);
}

export function DTOPagoFromJSONTyped(json: any, ignoreDiscriminator: boolean): DTOPago {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'fechaPago': json['fechaPago'] == null ? undefined : (new Date(json['fechaPago'])),
        'importe': json['importe'] == null ? undefined : json['importe'],
        'metodoPago': json['metodoPago'] == null ? undefined : json['metodoPago'],
        'estado': json['estado'] == null ? undefined : json['estado'],
        'alumnoId': json['alumnoId'] == null ? undefined : json['alumnoId'],
        'facturaCreada': json['facturaCreada'] == null ? undefined : json['facturaCreada'],
        'items': json['items'] == null ? undefined : ((json['items'] as Array<any>).map(ItemPagoFromJSON)),
        'stripePaymentIntentId': json['stripePaymentIntentId'] == null ? undefined : json['stripePaymentIntentId'],
        'stripeChargeId': json['stripeChargeId'] == null ? undefined : json['stripeChargeId'],
        'failureReason': json['failureReason'] == null ? undefined : json['failureReason'],
        'clientSecret': json['clientSecret'] == null ? undefined : json['clientSecret'],
        'classId': json['classId'] == null ? undefined : json['classId'],
        'descripcionEstado': json['descripcionEstado'] == null ? undefined : json['descripcionEstado'],
        'numeroItems': json['numeroItems'] == null ? undefined : json['numeroItems'],
        'descripcionMetodoPago': json['descripcionMetodoPago'] == null ? undefined : json['descripcionMetodoPago'],
    };
}

export function DTOPagoToJSON(json: any): DTOPago {
    return DTOPagoToJSONTyped(json, false);
}

export function DTOPagoToJSONTyped(value?: DTOPago | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'fechaPago': value['fechaPago'] == null ? undefined : ((value['fechaPago']).toISOString()),
        'importe': value['importe'],
        'metodoPago': value['metodoPago'],
        'estado': value['estado'],
        'alumnoId': value['alumnoId'],
        'facturaCreada': value['facturaCreada'],
        'items': value['items'] == null ? undefined : ((value['items'] as Array<any>).map(ItemPagoToJSON)),
        'stripePaymentIntentId': value['stripePaymentIntentId'],
        'stripeChargeId': value['stripeChargeId'],
        'failureReason': value['failureReason'],
        'clientSecret': value['clientSecret'],
        'classId': value['classId'],
        'descripcionEstado': value['descripcionEstado'],
        'numeroItems': value['numeroItems'],
        'descripcionMetodoPago': value['descripcionMetodoPago'],
    };
}

