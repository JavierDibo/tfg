/* tslint:disable */
/* eslint-disable */
/**
 * Academia API
 * API para gesti√≥n de academia con roles de administrador, profesor y alumno
 *
 * The version of the OpenAPI document: 1.0
 * Contact: contact@academia.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Material } from './Material';
import {
	MaterialFromJSON,
	MaterialFromJSONTyped,
	MaterialToJSON,
	MaterialToJSONTyped
} from './Material';

/**
 *
 * @export
 * @interface DTOTaller
 */
export interface DTOTaller {
	/**
	 *
	 * @type {number}
	 * @memberof DTOTaller
	 */
	id?: number;
	/**
	 *
	 * @type {string}
	 * @memberof DTOTaller
	 */
	titulo?: string;
	/**
	 *
	 * @type {string}
	 * @memberof DTOTaller
	 */
	descripcion?: string;
	/**
	 *
	 * @type {number}
	 * @memberof DTOTaller
	 */
	precio?: number;
	/**
	 *
	 * @type {string}
	 * @memberof DTOTaller
	 */
	presencialidad?: DTOTallerPresencialidadEnum;
	/**
	 *
	 * @type {string}
	 * @memberof DTOTaller
	 */
	imagenPortada?: string;
	/**
	 *
	 * @type {string}
	 * @memberof DTOTaller
	 */
	nivel?: DTOTallerNivelEnum;
	/**
	 *
	 * @type {Array<string>}
	 * @memberof DTOTaller
	 */
	alumnosId?: Array<string>;
	/**
	 *
	 * @type {Array<string>}
	 * @memberof DTOTaller
	 */
	profesoresId?: Array<string>;
	/**
	 *
	 * @type {Array<string>}
	 * @memberof DTOTaller
	 */
	ejerciciosId?: Array<string>;
	/**
	 *
	 * @type {Array<Material>}
	 * @memberof DTOTaller
	 */
	material?: Array<Material>;
	/**
	 *
	 * @type {number}
	 * @memberof DTOTaller
	 */
	duracionHoras?: number;
	/**
	 *
	 * @type {Date}
	 * @memberof DTOTaller
	 */
	fechaRealizacion?: Date;
	/**
	 *
	 * @type {string}
	 * @memberof DTOTaller
	 */
	horaComienzo?: string;
	/**
	 *
	 * @type {string}
	 * @memberof DTOTaller
	 */
	horaFinalizacion?: string;
	/**
	 *
	 * @type {number}
	 * @memberof DTOTaller
	 */
	numeroAlumnos?: number;
	/**
	 *
	 * @type {number}
	 * @memberof DTOTaller
	 */
	numeroProfesores?: number;
}

/**
 * @export
 */
export const DTOTallerPresencialidadEnum = {
	Online: 'ONLINE',
	Presencial: 'PRESENCIAL'
} as const;
export type DTOTallerPresencialidadEnum =
	(typeof DTOTallerPresencialidadEnum)[keyof typeof DTOTallerPresencialidadEnum];

/**
 * @export
 */
export const DTOTallerNivelEnum = {
	Principiante: 'PRINCIPIANTE',
	Intermedio: 'INTERMEDIO',
	Avanzado: 'AVANZADO'
} as const;
export type DTOTallerNivelEnum = (typeof DTOTallerNivelEnum)[keyof typeof DTOTallerNivelEnum];

/**
 * Check if a given object implements the DTOTaller interface.
 */
export function instanceOfDTOTaller(value: object): value is DTOTaller {
	return true;
}

export function DTOTallerFromJSON(json: any): DTOTaller {
	return DTOTallerFromJSONTyped(json, false);
}

export function DTOTallerFromJSONTyped(json: any, ignoreDiscriminator: boolean): DTOTaller {
	if (json == null) {
		return json;
	}
	return {
		id: json['id'] == null ? undefined : json['id'],
		titulo: json['titulo'] == null ? undefined : json['titulo'],
		descripcion: json['descripcion'] == null ? undefined : json['descripcion'],
		precio: json['precio'] == null ? undefined : json['precio'],
		presencialidad: json['presencialidad'] == null ? undefined : json['presencialidad'],
		imagenPortada: json['imagenPortada'] == null ? undefined : json['imagenPortada'],
		nivel: json['nivel'] == null ? undefined : json['nivel'],
		alumnosId: json['alumnosId'] == null ? undefined : json['alumnosId'],
		profesoresId: json['profesoresId'] == null ? undefined : json['profesoresId'],
		ejerciciosId: json['ejerciciosId'] == null ? undefined : json['ejerciciosId'],
		material:
			json['material'] == null ? undefined : (json['material'] as Array<any>).map(MaterialFromJSON),
		duracionHoras: json['duracionHoras'] == null ? undefined : json['duracionHoras'],
		fechaRealizacion:
			json['fechaRealizacion'] == null ? undefined : new Date(json['fechaRealizacion']),
		horaComienzo: json['horaComienzo'] == null ? undefined : json['horaComienzo'],
		horaFinalizacion: json['horaFinalizacion'] == null ? undefined : json['horaFinalizacion'],
		numeroAlumnos: json['numeroAlumnos'] == null ? undefined : json['numeroAlumnos'],
		numeroProfesores: json['numeroProfesores'] == null ? undefined : json['numeroProfesores']
	};
}

export function DTOTallerToJSON(json: any): DTOTaller {
	return DTOTallerToJSONTyped(json, false);
}

export function DTOTallerToJSONTyped(
	value?: DTOTaller | null,
	ignoreDiscriminator: boolean = false
): any {
	if (value == null) {
		return value;
	}

	return {
		id: value['id'],
		titulo: value['titulo'],
		descripcion: value['descripcion'],
		precio: value['precio'],
		presencialidad: value['presencialidad'],
		imagenPortada: value['imagenPortada'],
		nivel: value['nivel'],
		alumnosId: value['alumnosId'],
		profesoresId: value['profesoresId'],
		ejerciciosId: value['ejerciciosId'],
		material:
			value['material'] == null ? undefined : (value['material'] as Array<any>).map(MaterialToJSON),
		duracionHoras: value['duracionHoras'],
		fechaRealizacion:
			value['fechaRealizacion'] == null
				? undefined
				: value['fechaRealizacion'].toISOString().substring(0, 10),
		horaComienzo: value['horaComienzo'],
		horaFinalizacion: value['horaFinalizacion'],
		numeroAlumnos: value['numeroAlumnos'],
		numeroProfesores: value['numeroProfesores']
	};
}
