/* tslint:disable */
/* eslint-disable */
/**
 * Academia API
 * API para gesti√≥n de academia con roles de administrador, profesor y alumno
 *
 * The version of the OpenAPI document: 1.0
 * Contact: contact@academia.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DTOEntregaEjercicio
 */
export interface DTOEntregaEjercicio {
    /**
     * 
     * @type {number}
     * @memberof DTOEntregaEjercicio
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof DTOEntregaEjercicio
     */
    nota?: number;
    /**
     * 
     * @type {Date}
     * @memberof DTOEntregaEjercicio
     */
    fechaEntrega?: Date;
    /**
     * 
     * @type {string}
     * @memberof DTOEntregaEjercicio
     */
    estado?: DTOEntregaEjercicioEstadoEnum;
    /**
     * 
     * @type {Array<string>}
     * @memberof DTOEntregaEjercicio
     */
    archivosEntregados?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof DTOEntregaEjercicio
     */
    alumnoEntreganteId?: string;
    /**
     * 
     * @type {string}
     * @memberof DTOEntregaEjercicio
     */
    ejercicioId?: string;
    /**
     * 
     * @type {number}
     * @memberof DTOEntregaEjercicio
     */
    numeroArchivos?: number;
    /**
     * 
     * @type {string}
     * @memberof DTOEntregaEjercicio
     */
    comentarios?: string;
    /**
     * 
     * @type {string}
     * @memberof DTOEntregaEjercicio
     */
    comentariosFormateados?: string;
    /**
     * 
     * @type {string}
     * @memberof DTOEntregaEjercicio
     */
    resumenComentarios?: string;
    /**
     * 
     * @type {string}
     * @memberof DTOEntregaEjercicio
     */
    calificacionCualitativa?: string;
    /**
     * 
     * @type {string}
     * @memberof DTOEntregaEjercicio
     */
    estadoDescriptivo?: string;
    /**
     * 
     * @type {string}
     * @memberof DTOEntregaEjercicio
     */
    notaFormateada?: string;
}


/**
 * @export
 */
export const DTOEntregaEjercicioEstadoEnum = {
    Pendiente: 'PENDIENTE',
    Entregado: 'ENTREGADO',
    Calificado: 'CALIFICADO'
} as const;
export type DTOEntregaEjercicioEstadoEnum = typeof DTOEntregaEjercicioEstadoEnum[keyof typeof DTOEntregaEjercicioEstadoEnum];


/**
 * Check if a given object implements the DTOEntregaEjercicio interface.
 */
export function instanceOfDTOEntregaEjercicio(value: object): value is DTOEntregaEjercicio {
    return true;
}

export function DTOEntregaEjercicioFromJSON(json: any): DTOEntregaEjercicio {
    return DTOEntregaEjercicioFromJSONTyped(json, false);
}

export function DTOEntregaEjercicioFromJSONTyped(json: any, ignoreDiscriminator: boolean): DTOEntregaEjercicio {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'nota': json['nota'] == null ? undefined : json['nota'],
        'fechaEntrega': json['fechaEntrega'] == null ? undefined : (new Date(json['fechaEntrega'])),
        'estado': json['estado'] == null ? undefined : json['estado'],
        'archivosEntregados': json['archivosEntregados'] == null ? undefined : json['archivosEntregados'],
        'alumnoEntreganteId': json['alumnoEntreganteId'] == null ? undefined : json['alumnoEntreganteId'],
        'ejercicioId': json['ejercicioId'] == null ? undefined : json['ejercicioId'],
        'numeroArchivos': json['numeroArchivos'] == null ? undefined : json['numeroArchivos'],
        'comentarios': json['comentarios'] == null ? undefined : json['comentarios'],
        'comentariosFormateados': json['comentariosFormateados'] == null ? undefined : json['comentariosFormateados'],
        'resumenComentarios': json['resumenComentarios'] == null ? undefined : json['resumenComentarios'],
        'calificacionCualitativa': json['calificacionCualitativa'] == null ? undefined : json['calificacionCualitativa'],
        'estadoDescriptivo': json['estadoDescriptivo'] == null ? undefined : json['estadoDescriptivo'],
        'notaFormateada': json['notaFormateada'] == null ? undefined : json['notaFormateada'],
    };
}

export function DTOEntregaEjercicioToJSON(json: any): DTOEntregaEjercicio {
    return DTOEntregaEjercicioToJSONTyped(json, false);
}

export function DTOEntregaEjercicioToJSONTyped(value?: DTOEntregaEjercicio | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'nota': value['nota'],
        'fechaEntrega': value['fechaEntrega'] == null ? undefined : ((value['fechaEntrega']).toISOString()),
        'estado': value['estado'],
        'archivosEntregados': value['archivosEntregados'],
        'alumnoEntreganteId': value['alumnoEntreganteId'],
        'ejercicioId': value['ejercicioId'],
        'numeroArchivos': value['numeroArchivos'],
        'comentarios': value['comentarios'],
        'comentariosFormateados': value['comentariosFormateados'],
        'resumenComentarios': value['resumenComentarios'],
        'calificacionCualitativa': value['calificacionCualitativa'],
        'estadoDescriptivo': value['estadoDescriptivo'],
        'notaFormateada': value['notaFormateada'],
    };
}

