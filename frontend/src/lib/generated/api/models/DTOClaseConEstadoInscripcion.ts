/* tslint:disable */
/* eslint-disable */
/**
 * Academia API
 * API para gesti√≥n de academia con roles de administrador, profesor y alumno
 *
 * The version of the OpenAPI document: 1.0
 * Contact: contact@academia.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DTOMaterial } from './DTOMaterial';
import {
    DTOMaterialFromJSON,
    DTOMaterialFromJSONTyped,
    DTOMaterialToJSON,
    DTOMaterialToJSONTyped,
} from './DTOMaterial';

/**
 * 
 * @export
 * @interface DTOClaseConEstadoInscripcion
 */
export interface DTOClaseConEstadoInscripcion {
    /**
     * 
     * @type {number}
     * @memberof DTOClaseConEstadoInscripcion
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof DTOClaseConEstadoInscripcion
     */
    titulo?: string;
    /**
     * 
     * @type {string}
     * @memberof DTOClaseConEstadoInscripcion
     */
    descripcion?: string;
    /**
     * 
     * @type {number}
     * @memberof DTOClaseConEstadoInscripcion
     */
    precio?: number;
    /**
     * 
     * @type {string}
     * @memberof DTOClaseConEstadoInscripcion
     */
    presencialidad?: DTOClaseConEstadoInscripcionPresencialidadEnum;
    /**
     * 
     * @type {string}
     * @memberof DTOClaseConEstadoInscripcion
     */
    imagenPortada?: string;
    /**
     * 
     * @type {string}
     * @memberof DTOClaseConEstadoInscripcion
     */
    nivel?: DTOClaseConEstadoInscripcionNivelEnum;
    /**
     * 
     * @type {Array<string>}
     * @memberof DTOClaseConEstadoInscripcion
     */
    alumnosId?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof DTOClaseConEstadoInscripcion
     */
    profesoresId?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof DTOClaseConEstadoInscripcion
     */
    ejerciciosId?: Array<string>;
    /**
     * 
     * @type {Array<DTOMaterial>}
     * @memberof DTOClaseConEstadoInscripcion
     */
    material?: Array<DTOMaterial>;
    /**
     * 
     * @type {string}
     * @memberof DTOClaseConEstadoInscripcion
     */
    tipoClase?: string;
    /**
     * 
     * @type {boolean}
     * @memberof DTOClaseConEstadoInscripcion
     */
    isEnrolled?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof DTOClaseConEstadoInscripcion
     */
    fechaInscripcion?: Date;
    /**
     * 
     * @type {number}
     * @memberof DTOClaseConEstadoInscripcion
     */
    numeroAlumnos?: number;
    /**
     * 
     * @type {number}
     * @memberof DTOClaseConEstadoInscripcion
     */
    numeroProfesores?: number;
    /**
     * 
     * @type {number}
     * @memberof DTOClaseConEstadoInscripcion
     */
    numeroEjercicios?: number;
}


/**
 * @export
 */
export const DTOClaseConEstadoInscripcionPresencialidadEnum = {
    Online: 'ONLINE',
    Presencial: 'PRESENCIAL',
    Hibrido: 'HIBRIDO'
} as const;
export type DTOClaseConEstadoInscripcionPresencialidadEnum = typeof DTOClaseConEstadoInscripcionPresencialidadEnum[keyof typeof DTOClaseConEstadoInscripcionPresencialidadEnum];

/**
 * @export
 */
export const DTOClaseConEstadoInscripcionNivelEnum = {
    Principiante: 'PRINCIPIANTE',
    Intermedio: 'INTERMEDIO',
    Avanzado: 'AVANZADO',
    Basico: 'BASICO'
} as const;
export type DTOClaseConEstadoInscripcionNivelEnum = typeof DTOClaseConEstadoInscripcionNivelEnum[keyof typeof DTOClaseConEstadoInscripcionNivelEnum];


/**
 * Check if a given object implements the DTOClaseConEstadoInscripcion interface.
 */
export function instanceOfDTOClaseConEstadoInscripcion(value: object): value is DTOClaseConEstadoInscripcion {
    return true;
}

export function DTOClaseConEstadoInscripcionFromJSON(json: any): DTOClaseConEstadoInscripcion {
    return DTOClaseConEstadoInscripcionFromJSONTyped(json, false);
}

export function DTOClaseConEstadoInscripcionFromJSONTyped(json: any, ignoreDiscriminator: boolean): DTOClaseConEstadoInscripcion {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'titulo': json['titulo'] == null ? undefined : json['titulo'],
        'descripcion': json['descripcion'] == null ? undefined : json['descripcion'],
        'precio': json['precio'] == null ? undefined : json['precio'],
        'presencialidad': json['presencialidad'] == null ? undefined : json['presencialidad'],
        'imagenPortada': json['imagenPortada'] == null ? undefined : json['imagenPortada'],
        'nivel': json['nivel'] == null ? undefined : json['nivel'],
        'alumnosId': json['alumnosId'] == null ? undefined : json['alumnosId'],
        'profesoresId': json['profesoresId'] == null ? undefined : json['profesoresId'],
        'ejerciciosId': json['ejerciciosId'] == null ? undefined : json['ejerciciosId'],
        'material': json['material'] == null ? undefined : ((json['material'] as Array<any>).map(DTOMaterialFromJSON)),
        'tipoClase': json['tipoClase'] == null ? undefined : json['tipoClase'],
        'isEnrolled': json['isEnrolled'] == null ? undefined : json['isEnrolled'],
        'fechaInscripcion': json['fechaInscripcion'] == null ? undefined : (new Date(json['fechaInscripcion'])),
        'numeroAlumnos': json['numeroAlumnos'] == null ? undefined : json['numeroAlumnos'],
        'numeroProfesores': json['numeroProfesores'] == null ? undefined : json['numeroProfesores'],
        'numeroEjercicios': json['numeroEjercicios'] == null ? undefined : json['numeroEjercicios'],
    };
}

export function DTOClaseConEstadoInscripcionToJSON(json: any): DTOClaseConEstadoInscripcion {
    return DTOClaseConEstadoInscripcionToJSONTyped(json, false);
}

export function DTOClaseConEstadoInscripcionToJSONTyped(value?: DTOClaseConEstadoInscripcion | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'titulo': value['titulo'],
        'descripcion': value['descripcion'],
        'precio': value['precio'],
        'presencialidad': value['presencialidad'],
        'imagenPortada': value['imagenPortada'],
        'nivel': value['nivel'],
        'alumnosId': value['alumnosId'],
        'profesoresId': value['profesoresId'],
        'ejerciciosId': value['ejerciciosId'],
        'material': value['material'] == null ? undefined : ((value['material'] as Array<any>).map(DTOMaterialToJSON)),
        'tipoClase': value['tipoClase'],
        'isEnrolled': value['isEnrolled'],
        'fechaInscripcion': value['fechaInscripcion'] == null ? undefined : ((value['fechaInscripcion']).toISOString()),
        'numeroAlumnos': value['numeroAlumnos'],
        'numeroProfesores': value['numeroProfesores'],
        'numeroEjercicios': value['numeroEjercicios'],
    };
}

